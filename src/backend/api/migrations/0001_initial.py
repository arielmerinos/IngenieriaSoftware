# Generated by Django 5.1.7 on 2025-03-20 00:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('category_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.category')),
                ('emoji', models.CharField(max_length=8)),
            ],
            bases=('api.category',),
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('category_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.category')),
                ('color', models.CharField(max_length=8)),
            ],
            bases=('api.category',),
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('category_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.category')),
                ('type_name', models.CharField(choices=[('beca', 'Beca'), ('maestria', 'Maestría'), ('doctorado', 'Doctorado'), ('postdoc', 'Postdoc'), ('investigacion', 'Investigación'), ('intercambio', 'Intercambio'), ('curso', 'Curso'), ('taller', 'Taller'), ('seminario', 'Seminario'), ('conferencia', 'Conferencia'), ('congreso', 'Congreso'), ('simposio', 'Simposio'), ('foro', 'Foro'), ('voluntariado', 'Voluntariado'), ('hackathon', 'Hackathon'), ('evento', 'Evento'), ('otro', 'Otro')], default='beca', max_length=50)),
            ],
            bases=('api.category',),
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('name', models.CharField(max_length=255)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, unique=True)),
                ('website', models.URLField(null=True)),
                ('logo', models.ImageField(null=True, upload_to='logos/')),
                ('members', models.ManyToManyField(related_name='members', through='api.Membership', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='membership',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.organization'),
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('phone_number', models.CharField(blank=True, max_length=15, unique=True)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('memberships', models.ManyToManyField(related_name='students', related_query_name='student', to='api.membership')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
                ('interests', models.ManyToManyField(related_name='student_interests', related_query_name='student_interest', to='api.interest')),
            ],
        ),
        migrations.CreateModel(
            name='Scholarship',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the scholarship', max_length=250)),
                ('publication_date', models.DateField(auto_now_add=True, help_text='Date when the scholarship was published')),
                ('start_date', models.DateField(help_text='Start date of the scholarship')),
                ('end_date', models.DateField(help_text='End date of the scholarship')),
                ('image', models.ImageField(blank=True, help_text='Image related to the scholarship', null=True, upload_to='scholarships')),
                ('content', models.TextField(help_text='Description of the scholarship')),
                ('created_by', models.ForeignKey(help_text='User who created the scholarship', on_delete=django.db.models.deletion.CASCADE, related_name='created_scholarships', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, help_text='Organization offering the scholarship', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scholarships', to='api.organization')),
                ('country', models.ManyToManyField(help_text='Country where the scholarship is offered', related_name='scholarship_countries', related_query_name='scholarship_country', to='api.country')),
                ('interests', models.ManyToManyField(help_text='Interests describing the scholarship', related_name='scholarship_interests', related_query_name='scholarship_interest', to='api.interest')),
                ('type', models.ManyToManyField(help_text='Type of the scholarship', related_name='scholarship_types', related_query_name='scholarship_type', to='api.type')),
            ],
            options={
                'verbose_name': 'Scholarship',
                'verbose_name_plural': 'Scholarships',
            },
        ),
    ]
